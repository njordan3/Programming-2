#include <iostream>


#include <stdlib.h>
#include <string.h>
#include "cmpslib.h"


using namespace std;
int speed = 100;

#define  ROWS 50 
#define  COLUMNS 122


#define StartingX 1
#define StartingY 1


char MAZE[][COLUMNS] =	
{
	"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
	"|       |         |   |   |       |   |   |     |     |         |   |     |     | |     | |         |     | |   |   |   |",
	"+-+-+-+ + +-+ + +-+ + + + + +-+-+ + + + + +-+ + + +-+ + +-+-+-+ + + +-+ + + +-+ + + +-+ + + +-+-+ + + +-+ + + + + + + + +",
	"|       | |   |     |   | |   |   | |   | |   |   | | | |   | | | |     | | |   |   |   |   |     | | |   |   | | |   | |",
	"+ +-+-+-+ +-+-+-+-+-+-+-+ +-+ + + + +-+-+ + +-+-+-+ + + +-+ + + +-+-+-+-+ +-+ +-+ + + +-+-+ + +-+ + + + +-+-+-+ + +-+-+ +",
	"| |     |   |         | |   | | | | | |   |         | |     |     |   |   |   | | | |     | | |   | | |         |   |   |",
	"+ + + + +-+ + +-+ +-+ + + +-+ + +-+ + + +-+-+-+ +-+-+ +-+-+-+ +-+ + +-+ +-+ +-+ + + +-+-+ +-+ +-+-+ + + +-+-+-+-+-+ + +-+",
	"| | | |   | | |   |   | |   | |     | | |   |   | |   |       |   |       |   |   | |       |     |   | |           | | |",
	"+ + + +-+ + + + +-+ +-+ +-+ + +-+-+-+ + + + +-+-+ + +-+-+-+-+-+ +-+-+-+ + +-+ +-+-+ +-+-+-+ +-+-+ +-+-+ + +-+-+-+ +-+ + +",
	"| | | |   | | |   |       |   |         | | |     |           | |   |   |         | |     | |   |   |     |     | |   | |",
	"+ + + + +-+ + + + +-+-+-+ +-+-+ +-+ +-+-+ + + +-+ + +-+-+-+-+ + + + +-+ +-+-+ +-+ +-+ +-+ + + +-+-+ + +-+-+ +-+-+ + +-+ +",
	"| | | |     | | |   | |   |   | | | |   | |   | | |   |   | | |   |   |   |   | |     |   |   |     |   |     |   |     |",
	"+ + + +-+-+-+ + +-+ + + +-+-+ + + + +-+ + +-+-+ + +-+-+ + + + + +-+-+ +-+ +-+ + +-+-+-+ +-+-+ + +-+-+-+ + + +-+ +-+-+-+ +",
	"|   |     |   |   | | |       | | |     |   |   |     | |   | |     |   |   |   |   |   |   | | |     |   | |   |   |   |",
	"+-+-+-+ + + +-+-+ + + +-+-+-+-+ + +-+-+-+-+ + +-+-+-+ + +-+ + +-+-+-+-+ + + +-+-+ + + +-+ +-+ + + +-+ +-+-+ + +-+ + + +-+",
	"|   |   |   |   | | |       | | | |   |   |     |       |   |   |     | | |     | | |   |   | | |   |   |   |     | |   |",
	"+ + + +-+-+-+ + + + +-+-+-+ + + + + + +-+ +-+-+-+ +-+ +-+ +-+-+ + +-+ + +-+-+-+ + +-+-+ +-+ + + +-+-+-+ +-+-+-+-+-+ +-+-+",
	"| |   |   |   | | | |   | | |       | |   |   |   | | |   |   | |   | |   |   | |   |       |       | |   |       |     |",
	"+ +-+-+ + + +-+ + + + + + + +-+-+ +-+ + +-+ + + +-+ + + +-+ + + +-+ + +-+ + + + +-+ + +-+-+-+-+-+-+ + +-+ + +-+-+ +-+-+ +",
	"| |   | | |   | | | | |     |     | | |   | |   |     | |   | | |   | |   | |   | | | |         | | |   | | | |   |     |",
	"+ + + + +-+-+ + + + +-+ +-+-+ +-+-+ + +-+ + +-+-+ +-+-+ + +-+ + + + +-+ +-+-+ + + + + + +-+-+-+ + + +-+ + + + + +-+ +-+-+",
	"| | | |       |   |     |   | |     | | |   |   | |     |   |   | | |   |     | |     | | |         |   | | |       |   |",
	"+ +-+ +-+-+-+-+-+-+-+-+-+-+ + + + +-+ + +-+-+ + + + +-+-+-+-+-+ + + + +-+ +-+-+ +-+ +-+ + + +-+ +-+-+ +-+ + +-+-+-+-+ + +",
	"|   |   |               |   | | |     | |   | | | |   |     |     | |     | |   | |     |   | |   |     | | |   |   | | |",
	"+-+ +-+ + +-+-+-+ +-+ +-+ +-+ + +-+-+-+ + + + + + +-+ + +-+ + + +-+ +-+ +-+ + +-+ +-+ +-+-+-+ +-+ + + + + +-+ + + + + + +",
	"|   | | | |       | | |   |   | |     | | |   | | |   |   |   | |   | | |   | |   |   | |   |     | | | |     | | | | | |",
	"+ +-+ + + + +-+-+-+ + + +-+ +-+ + +-+ + +-+-+ + + + +-+ +-+-+-+ + +-+ + + + + + +-+-+-+ + +-+-+-+-+ +-+ + +-+ + +-+ +-+ +",
	"| |   |   |         |       | |   | |         |   |     |     | |     | | | | | |   |   | |           | | |   | |   |   |",
	"+ + +-+ +-+-+ +-+-+-+-+ +-+-+ +-+ + +-+ +-+-+-+-+-+-+-+-+ +-+ + +-+-+-+ +-+ + + + + + +-+ + +-+-+-+ + + + + +-+ + +-+ +-+",
	"| | |   | |     |     | |   |     |   | |           |   | |     | |   |   | |   | | |   |   |       | |   |   | | | | | |",
	"+ + + +-+ + + + + +-+ + + + +-+-+-+-+ + + +-+-+-+ + +-+ + + +-+-+ + + +-+ + +-+ + + + + + +-+ +-+-+-+ +-+-+-+ + + + + + +",
	"| | |     | | | |   |     |     |   |   | |       |     | |   |     |   | |     | |   |   |     |   | |       |   |   | |",
	"+ + +-+-+-+ + + +-+-+-+-+-+-+-+ + + +-+-+ + +-+-+-+-+-+-+ +-+ + +-+-+-+ + +-+-+-+ +-+-+-+-+-+-+ + +-+ + +-+-+-+-+-+ +-+ +",
	"| | |   |   | | |     |   |     | |       |   |     |   | |   |   |   | | |   |               | | |   | |     |   |   | |",
	"+ + + + + +-+ + + +-+ + +-+ +-+-+ +-+-+-+-+-+ +-+-+ + +-+ +-+-+-+ + + + + + +-+ +-+-+-+-+-+-+ + + + + + +-+-+ + + + +-+ +",
	"| |   |   | | | | | | |   | |   |         |   |     |   |     |   | | |   |     |     |       | |   | | |   |   | | |   |",
	"+ +-+-+-+-+ + + + + + +-+ + +-+ +-+-+-+-+ + +-+ +-+-+-+ +-+-+ + +-+ + +-+-+-+-+ + +-+ +-+-+-+-+ +-+-+ + + + + +-+ + + +-+",
	"| |       | | | |   | |   |     | |     | |       |   | |           | |   |   | | | |     |   |   |   |   | | | | | |   |",
	"+ + +-+-+ + + + +-+-+ + +-+-+-+ + + +-+ + +-+-+-+-+ + + +-+-+-+ +-+-+ +-+ + + +-+ + +-+-+ + + +-+ + +-+-+-+ + + + + +-+ +",
	"|   | |   | | | |       |   |   |     | | |         | |   |     |   |   | | |     |     | | | |   | | |     | |   |     |",
	"+ +-+ + +-+ + +-+ +-+ +-+-+ + +-+-+ + + + + + +-+-+-+ +-+ + +-+-+ + +-+ + + +-+-+-+ +-+ + + + + +-+ + + + +-+ +-+-+-+ +-+",
	"| | |   |   |     |         | |     | | |   | |     |       |   | |     | |         |   | | | | |   |   | |   |     |   |",
	"+ + +-+-+ +-+-+-+-+-+ +-+-+-+ + +-+-+-+ +-+-+-+ +-+ +-+-+ +-+-+ + +-+-+ + +-+ +-+-+-+-+-+ + + +-+ +-+-+ + + +-+ +-+ +-+ +",
	"| |   |   |     |     |       |   |   |   |       | |     |     | | |   | |   |     |     | |     |   | | | |     |   | |",
	"+ +-+ + +-+ +-+ + +-+-+-+-+-+-+-+ +-+ +-+ + + + +-+ + +-+-+ +-+-+ + + +-+ + + + +-+-+ +-+ + +-+-+-+ + +-+ + +-+ +-+-+ + +",
	"|       |     |     |     |   |   |   | |   | |   | | |     | |   |       | |   |   | |   | |       |     |       |   | |",
	"+-+-+ +-+-+-+ + +-+-+ +-+ +-+ + +-+ +-+ +-+-+-+-+ + + + +-+-+ + +-+-+ +-+-+ +-+-+ + + + +-+ +-+ +-+-+-+-+-+-+-+ + +-+-+ +",
	"|   | |       |     |   |   | |     |   |         | |   |   |   |     |     |   | | | |       | |   |     |     |   |   |",
	"+ + + + +-+-+-+-+-+ +-+-+ + + +-+-+ + + + +-+-+-+-+ + +-+ + +-+-+ + + +-+-+-+-+ + + + +-+-+-+ + + + +-+ + + +-+-+-+ + +-+",
	"| |   |           |       |   |       | |         |   |   |       | |             |   |       |   |     |         |     F",
	"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
};

//--------------------------------------------------------------------

void printMaze()
{
	// we want to redraw the maze so move the cursor back so we print in the same place

	PositionCursor(0,0);

	cout << ChangeToGreen() ;
	for(int rows=0;rows <= ROWS  ;rows++)
	{
		for (int columns=0;columns < COLUMNS;columns++)
		{
			PositionCursor(rows,columns);
			cout <<  MAZE[rows][columns];
		}
		cout <<"\n";
	}
}

//---------------------------------------------------------------------


bool Step(int x, int y, int level)
{ 
// is the point x, y the finish? if so cout "Finish Fournd at.... "
// and return true

    if(MAZE[x][y] == 'F')
    {
        cout << "Finish Found at " << x << "," << y << endl;
        return true;
    }
// if the point x,y is not an empty space return false
    if(MAZE[x][y] != ' ')
    {
        return false;
    }
// so now we know that point x,y  is a space
// set  MAZE[x][y] to the char '@'
    MAZE[x][y] = '@';
    PositionCursor(x,y);
// set the cursor postition to x,y   , use function PositionCursor
// print the char '@'
    cout << ChangeToRed() << "@";
// print some debugging info, mine prints current location
// and how many levels deep we are */

	PositionCursor(ROWS +1,0);
	cout << ChangeToGreen()<< "currently at "<<x<<","<<y<<endl;
	cout << level << " levels deep\n";
    // pause for a while

	WaitHundredth(speed); 
    if(Step(x-1,y,level+1))
    {
        return true;       
    }
    else if(Step(x,y+1,level+1))
    {
        return true;
    }
    else if(Step(x+1,y,level+1))
    {
        return true;
    }
    else if(Step(x,y-1,level+1))
    {
        return true;
    }
    else
    {
        MAZE[x][y] = ' ';
        PositionCursor(x,y);
        cout << " ";
    }    
	return false;
}



//-----------------------------------------------------------------

int main()
{

	cout << " What delay do you want between moves... 1-99:   ";

	cin >> speed;
	system("clear");
	printMaze();

	Step(StartingX ,StartingY,1);

	return 0;
}




